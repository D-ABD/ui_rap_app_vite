// src/api/tokenStorage.ts

/**
 * ðŸ’¾ storeTokens(access, refresh)
 *
 * Sauvegarde les tokens JWT (access & refresh) dans le `localStorage`.
 * Ces tokens seront utilisÃ©s pour authentifier les requÃªtes futures.
 *
 * @param access - Token dâ€™accÃ¨s (court terme)
 * @param refresh - Token de rafraÃ®chissement (long terme)
 */
export const storeTokens = (access: string, refresh: string) => {
  localStorage.setItem('access', access);
  localStorage.setItem('refresh', refresh);
};

/**
 * ðŸ“¦ getTokens()
 *
 * RÃ©cupÃ¨re les tokens JWT stockÃ©s dans le `localStorage`.
 *
 * @returns Un objet contenant les tokens : { access, refresh }
 */
export const getTokens = () => ({
  access: localStorage.getItem('access'),
  refresh: localStorage.getItem('refresh'),
});

/**
 * ðŸ—‘ clearTokens()
 *
 * Supprime les tokens JWT du `localStorage`.
 * Ã€ appeler lors de la dÃ©connexion de lâ€™utilisateur.
 */
export const clearTokens = () => {
  localStorage.removeItem('access');
  localStorage.removeItem('refresh');
};
